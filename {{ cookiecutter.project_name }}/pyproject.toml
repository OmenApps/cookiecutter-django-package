[build-system]
requires = ["poetry-core>=1.6.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.package_description }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}"
repository = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}"
documentation = "https://{{ cookiecutter.project_name }}.readthedocs.io"
packages = [{ include = "{{ cookiecutter.package_name }}", from = "src" }]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "{{ cookiecutter.development_status }}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}/releases"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
django = ">=4.2"
click = ">=8.1.7"

[tool.poetry.dev-dependencies]
{% if cookiecutter.use_playwright == "y" %}playwright = ">=1.44.0"{% endif %}
{% if cookiecutter.use_playwright == "y" %}pytest-playwright = ">=0.5.0"{% endif %}
{% if cookiecutter.use_postgres == "y" %}psycopg2-binary = ">=2.9.9"{% endif %}
Pygments = ">=2.18.0"
bandit = ">=1.7.8"
black = ">=24.4.2"
coverage = { extras = ["toml"], version = ">=7.5.1" }
darglint = ">=1.8.1"
flake8 = "7.0.0"
flake8-bugbear = ">=24.4.26"
flake8-docstrings = ">=1.7.0"
flake8-rst-docstrings = ">=0.3.0"
furo = ">=2024.5.6"
isort = ">=5.13.2"
nox = ">=2024.4.15"
nox-poetry = ">=1.0.3"
poetry-plugin-export = ">=1.8.0"
pep8-naming = ">=0.14.1"
pre-commit = ">=3.7.1"
pre-commit-hooks = ">=4.6.0"
pytest = ">=8.2.1"
pytest-cov = ">=5.0.0"
pytest-django = ">=4.8.0"
pyupgrade = ">=3.15.2"
safety = ">=3.2.0"
sphinx = ">=7.3.7"
sphinx-autobuild = ">=2024.4.16"
sphinx-click = ">=6.0.0"
xdoctest = { extras = ["colors"], version = ">=1.1.3" }
myst-parser = { version = ">=3.0.1" }

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312"]
force-exclude = '''
(
  .nox
)
'''

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 50
omit = [".nox/*", "tests/*", "**/migrations/*", "**/__init__.py"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["*test_*.py", "*_test.py", "tests/*.py"]
log_cli = true
log_cli_level = "INFO"

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2
extend_skip = [".nox"]
