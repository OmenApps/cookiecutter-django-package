[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.package_description }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}"
repository = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}"
documentation = "https://{{ cookiecutter.project_name }}.readthedocs.io"
packages = [{ include = "{{ cookiecutter.package_name }}", from = "src" }]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "{{ cookiecutter.development_status }}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{ cookiecutter.github_user }}/{{ cookiecutter.project_name }}/releases"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
django = ">=3.2"
click = ">=8.0.1"

[tool.poetry.dev-dependencies]
{% if cookiecutter.use_playwright %}playwright = ">=1.39.0"{% endif %}
{% if cookiecutter.use_playwright %}pytest-playwright = ">=0.4.3"{% endif %}
Pygments = ">=2.10.0"
bandit = ">=1.7.4"
black = ">=21.10b0"
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2023.9.10"
isort = ">=5.10.1"
pep8-naming = ">=0.12.1"
pre-commit = ">=3.5.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=7.4.2"
pytest-cov = ">=4.1.0"
pytest-django = ">=4.5.2"
pytest-docker = ">=2.0.0"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=7.2.6"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=5.0.1"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 50
omit = ["tests/*", "**/migrations/*", "**/__init__.py"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["*test_*.py", "*_test.py", "tests/*.py"]

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.flake8]
select = ['B', 'B9', 'C', 'D', 'DAR', 'E', 'F', 'N', 'RST', 'W']
ignore = ['E203', 'E501', 'RST201', 'RST203', 'RST301', 'W503']
max-line-length = 120
max-complexity = 10
docstring-convention = 'google'
rst-roles = ['class', 'const', 'func', 'meth', 'mod', 'ref']
rst-directives = 'deprecated'
count = true
exclude = [".git", "__pycache__", "dist", "migrations"]
